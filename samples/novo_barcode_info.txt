Example Sequence of .fq file: 

	@A00738:177:HMHFLDSXY:4:1101:1036:1000 1:N:0:CCGTTTAT+TTCGCAGT
	GGTATCAGCATGCAGCTCATGTCCACCGTGGTCCGAATCCTGAATACCAACACGAGGGGTAAAATAAATTCCCCTCTCAGACAATCACTGGTACAGCTGATTAGATGTCCTGAGTCAAATATCTCAAACTCTTCAAACCATCCTACTACT
	+
	FF:FFFFFFFFFFFFFFF,F,FFFFFF:::,FF,:FF,F:FFF:,:F:FFFF::FF,F,FFF:F,FFFFFFFFF,FFFF:F:FFFF:FFF::FFF,FF:F,:F,,:FFF,F:FFFFFF,:F:,,FFFFF,:F,FF:FFFFFF,F,:,F,F

Barcodes = line 1, characters 46-62

	CCGTTTAT+TTCGCAGT

	96TruSeqBarcodes.txt+idt_I5_barcodes.csv

First 6 bases match with those in 96TruSeqBarcodes.txt

	A01 = CCGTTT

2 random bases 

+ 

Reverse compliment of 8 unique bases in idt_I5_barcodes.csv

	black01_A01_i5F = AATGATACGGCGACCACCGAGATCTACACACTGCGAAACACTCTTTCCCTACACGACGCTCTTCCGATC*T
	unique 8bp barcode is in charcaters 29-37 = ACTGCGAA 
	compliment of unique 8pb barcode = TGACGCTT
	reverse compliment of unique 8bp barcode = TTCGCAGT

So 96TruSeq!!+Black = CCGTTT!!+TTCGCAGT
We see this in line 1 CCGTTTAT+TTCGCAGT

I felt that it was unecessary to pull out both barcodes to split plates. It could reduce the reads in needing such a long perfect match. Additionally, I didn't want to deal with the wild cards and felt that the first bacode was more likely to have errors, so I just grepped the 8 Black barcodes. 

Script to split my two plates: 

#SBATCH -J split_plate
#SBATCH -e split_plate.%j.err
#SBATCH -c 20
#SBATCH -p high
#SBATCH --time=1-20:00:00

#set -e # exits upon failing command
#set -v # verbose -- all lines
#set -x # trace of all commands after expansion before execution

#This script is set to only grep out the 8bp Black_i5F barcodes, which are found after the 6bp 96TruSeq - 6bp??+8bp


seq1=$1
seq2=$2
somm=$3

grep --no-group-separator -A 3 "+TTCGCAGT" ${seq1} > ${somm}_TTCGCAGT_R1.fastq
grep --no-group-separator -A 3 "+TTCGCAGT" ${seq2} > ${somm}_TTCGCAGT_R2.fastq

grep --no-group-separator -A 3 "+CGAGACTA" ${seq1} > ${somm}_CGAGACTA_R1.fastq
grep --no-group-separator -A 3 "+CGAGACTA" ${seq2} > ${somm}_CGAGACTA_R2.fastq

grep --no-group-separator -A 3 "+GGCATACT" ${seq1} > ${somm}_GGCATACT_R1.fastq
grep --no-group-separator -A 3 "+GGCATACT" ${seq2} > ${somm}_GGCATACT_R2.fastq

grep --no-group-separator -A 3 "+CTTCACCA" ${seq1} > ${somm}_CTTCACCA_R1.fastq
grep --no-group-separator -A 3 "+CTTCACCA" ${seq2} > ${somm}_CTTCACCA_R2.fastq

grep --no-group-separator -A 3 "+GAGCAGTA" ${seq1} > ${somm}_GAGCAGTA_R1.fastq
grep --no-group-separator -A 3 "+GAGCAGTA" ${seq2} > ${somm}_GAGCAGTA_R2.fastq

grep --no-group-separator -A 3 "+GTAGGAGT" ${seq1} > ${somm}_GTAGGAGT_R1.fastq
grep --no-group-separator -A 3 "+GTAGGAGT" ${seq2} > ${somm}_GTAGGAGT_R2.fastq

grep --no-group-separator -A 3 "+CTGGAGTA" ${seq1} > ${somm}_CTGGAGTA_R1.fastq
grep --no-group-separator -A 3 "+CTGGAGTA" ${seq2} > ${somm}_CTGGAGTA_R2.fastq

grep --no-group-separator -A 3 "+CTAGGTGA" ${seq1} > ${somm}_CTAGGTGA_R1.fastq
grep --no-group-separator -A 3 "+CTAGGTGA" ${seq2} > ${somm}_CTAGGTGA_R2.fastq

grep --no-group-separator -A 3 "+GCAAGATC" ${seq1} > ${somm}_GCAAGATC_R1.fastq
grep --no-group-separator -A 3 "+GCAAGATC" ${seq2} > ${somm}_GCAAGATC_R2.fastq

grep --no-group-separator -A 3 "+TCAGGCTT" ${seq1} > ${somm}_TCAGGCTT_R1.fastq
grep --no-group-separator -A 3 "+TCAGGCTT" ${seq2} > ${somm}_TCAGGCTT_R2.fastq

grep --no-group-separator -A 3 "+CGTGTACT" ${seq1} > ${somm}_CGTGTACT_R1.fastq
grep --no-group-separator -A 3 "+CGTGTACT" ${seq2} > ${somm}_CGTGTACT_R2.fastq



	

